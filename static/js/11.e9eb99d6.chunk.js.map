{"version":3,"file":"static/js/11.e9eb99d6.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.module.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 50px auto 0;\n  padding: 48px 64px;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  border-radius: 32px;\n  background-color: #e9f4f2;\n  box-shadow: rgb(0 0 0 / 25%) 0px 0px 20px;\n`;\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  margin-top: 16px;\n  width: 100%;\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const Div = styled.div`\n  margin-bottom: 32px;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 18px;\n  line-height: 1.5;\n  border-bottom: 2px solid rgb(209, 229, 244);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  margin-top: 20px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  background-color: #e9f4f2;\n  &:focus {\n    outline: none;\n    border-color: red;\n    background-color: #e9f4f2;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 24px;\n  display: inline-flex;\n  margin-top: 20px;\n  -webkit-box-align: center;\n  align-items: center;\n  gap: 4px;\n  color: rgb(24, 24, 24);\n  font-size: 16px;\n  font-weight: 500;\n  background-color: rgb(255, 255, 255);\n  border-radius: 12px;\n  border: none;\n  box-shadow: rgb(209 229 244) 0px 0px 0px 2px;\n\n  &:hover,\n  focus {\n    color: white;\n    background-color: red;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (nameExists) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>Name </Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n        onChange={handleChange}\n        value={name}\n      />\n      <Label>Number </Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"111-11-11\"\n        onChange={handleChange}\n        value={number}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nexport const Div = styled.div`\n  margin: 30px auto 50px;\n  padding: 48px 64px;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  border-radius: 32px;\n  background-color: #e9f4f2;\n  box-shadow: rgb(0 0 0 / 25%) 0px 0px 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 24px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: bold;\n  display: inline-flex;\n  margin-left: 20px;\n  -webkit-box-align: center;\n  align-items: center;\n  gap: 4px;\n  color: rgb(24, 24, 24);\n\n  background-color: rgb(255, 255, 255);\n  border-radius: 12px;\n  border: none;\n  box-shadow: rgb(209 229 244) 0px 0px 0px 2px;\n\n  &:hover,\n  focus {\n    color: white;\n    background-color: red;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  }\n`;\n\nexport const Ul = styled.ul`\n  display: grid;\n  padding: 0;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  line-height: 1.5;\n  font-weight: bold;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { Button, Div, Li, Ul, Text } from './ContactsList.module';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter ? filter.toLowerCase() : '';\n\n    if (!contacts) {\n      return [];\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filteredContacts = findContacts();\n\n  return (\n    <Div>\n      <Ul>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <Li key={id}>\n              <Text>\n                {name}: {number}\n              </Text>\n              <Button onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </Li>\n          );\n        })}\n      </Ul>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 50px auto 50px;\n  padding: 48px 64px;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  border-radius: 32px;\n  background-color: #e9f4f2;\n  box-shadow: rgb(0 0 0 / 25%) 0px 0px 20px;\n`;\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  width: 100%;\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 18px;\n  line-height: 1.5;\n  border-bottom: 2px solid rgb(209, 229, 244);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  margin-top: 20px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  background-color: #e9f4f2;\n  &:focus {\n    outline: none;\n    border-color: red;\n    background-color: #e9f4f2;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filter';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { Input, Label, Form } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Form>\n      <Label>Find contacts by Name </Label>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter filter\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filter}\n      />\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","getContacts","state","contacts","items","getFilter","filter","Form","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","contact","nameExists","some","toLowerCase","alert","addContact","type","pattern","title","required","placeholder","onChange","Div","Ul","Li","Text","ContactList","useEffect","fetchContacts","filteredContacts","normalizedFilter","includes","findContacts","map","onClick","deleteContact","Filter","e","setFilter","Contacts","isLoading","selectIsLoggedIn","Helmet"],"sourceRoot":""}